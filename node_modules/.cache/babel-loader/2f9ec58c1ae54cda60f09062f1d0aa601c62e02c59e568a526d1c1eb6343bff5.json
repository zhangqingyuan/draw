{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nconst viewSize = 100;\nconst borderWidth = viewSize / 5;\nconst radius = viewSize / 2 - borderWidth / 2;\nconst circumference = radius * 2 * Math.PI;\nconst position = 50;\nconst CustomCircle = props => {\n  const {\n    dotClassName,\n    style,\n    hasCircleCls\n  } = props;\n  return /*#__PURE__*/React.createElement(\"circle\", {\n    className: classNames(\"\".concat(dotClassName, \"-circle\"), {\n      [\"\".concat(dotClassName, \"-circle-bg\")]: hasCircleCls\n    }),\n    r: radius,\n    cx: position,\n    cy: position,\n    strokeWidth: borderWidth,\n    style: style\n  });\n};\nconst Progress = _ref => {\n  let {\n    percent,\n    prefixCls\n  } = _ref;\n  const dotClassName = \"\".concat(prefixCls, \"-dot\");\n  const holderClassName = \"\".concat(dotClassName, \"-holder\");\n  const hideClassName = \"\".concat(holderClassName, \"-hidden\");\n  const [render, setRender] = React.useState(false);\n  // ==================== Visible =====================\n  useLayoutEffect(() => {\n    if (percent !== 0) {\n      setRender(true);\n    }\n  }, [percent !== 0]);\n  // ==================== Progress ====================\n  const safePtg = Math.max(Math.min(percent, 100), 0);\n  // ===================== Render =====================\n  if (!render) {\n    return null;\n  }\n  const circleStyle = {\n    strokeDashoffset: \"\".concat(circumference / 4),\n    strokeDasharray: \"\".concat(circumference * safePtg / 100, \" \").concat(circumference * (100 - safePtg) / 100)\n  };\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(holderClassName, \"\".concat(dotClassName, \"-progress\"), safePtg <= 0 && hideClassName)\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 \".concat(viewSize, \" \").concat(viewSize),\n    // biome-ignore lint/a11y/noNoninteractiveElementToInteractiveRole: progressbar could be readonly\n    role: \"progressbar\",\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    \"aria-valuenow\": safePtg\n  }, /*#__PURE__*/React.createElement(CustomCircle, {\n    dotClassName: dotClassName,\n    hasCircleCls: true\n  }), /*#__PURE__*/React.createElement(CustomCircle, {\n    dotClassName: dotClassName,\n    style: circleStyle\n  })));\n};\nexport default Progress;","map":{"version":3,"names":["React","classNames","useLayoutEffect","viewSize","borderWidth","radius","circumference","Math","PI","position","CustomCircle","props","dotClassName","style","hasCircleCls","createElement","className","concat","r","cx","cy","strokeWidth","Progress","_ref","percent","prefixCls","holderClassName","hideClassName","render","setRender","useState","safePtg","max","min","circleStyle","strokeDashoffset","strokeDasharray","viewBox","role"],"sources":["/Users/lingxin/myapp/draw/node_modules/antd/es/spin/Indicator/Progress.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nconst viewSize = 100;\nconst borderWidth = viewSize / 5;\nconst radius = viewSize / 2 - borderWidth / 2;\nconst circumference = radius * 2 * Math.PI;\nconst position = 50;\nconst CustomCircle = props => {\n  const {\n    dotClassName,\n    style,\n    hasCircleCls\n  } = props;\n  return /*#__PURE__*/React.createElement(\"circle\", {\n    className: classNames(`${dotClassName}-circle`, {\n      [`${dotClassName}-circle-bg`]: hasCircleCls\n    }),\n    r: radius,\n    cx: position,\n    cy: position,\n    strokeWidth: borderWidth,\n    style: style\n  });\n};\nconst Progress = _ref => {\n  let {\n    percent,\n    prefixCls\n  } = _ref;\n  const dotClassName = `${prefixCls}-dot`;\n  const holderClassName = `${dotClassName}-holder`;\n  const hideClassName = `${holderClassName}-hidden`;\n  const [render, setRender] = React.useState(false);\n  // ==================== Visible =====================\n  useLayoutEffect(() => {\n    if (percent !== 0) {\n      setRender(true);\n    }\n  }, [percent !== 0]);\n  // ==================== Progress ====================\n  const safePtg = Math.max(Math.min(percent, 100), 0);\n  // ===================== Render =====================\n  if (!render) {\n    return null;\n  }\n  const circleStyle = {\n    strokeDashoffset: `${circumference / 4}`,\n    strokeDasharray: `${circumference * safePtg / 100} ${circumference * (100 - safePtg) / 100}`\n  };\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(holderClassName, `${dotClassName}-progress`, safePtg <= 0 && hideClassName)\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: `0 0 ${viewSize} ${viewSize}`,\n    // biome-ignore lint/a11y/noNoninteractiveElementToInteractiveRole: progressbar could be readonly\n    role: \"progressbar\",\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    \"aria-valuenow\": safePtg\n  }, /*#__PURE__*/React.createElement(CustomCircle, {\n    dotClassName: dotClassName,\n    hasCircleCls: true\n  }), /*#__PURE__*/React.createElement(CustomCircle, {\n    dotClassName: dotClassName,\n    style: circleStyle\n  })));\n};\nexport default Progress;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}