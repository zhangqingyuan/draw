{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n\n  // 初始化音频\n  useEffect(() => {\n    bgAudioRef.current = new Audio(bgMusic);\n    rollAudioRef.current = new Audio(rollMusic);\n    winAudioRef.current = new Audio(winMusic);\n\n    // 设置音量和循环\n    if (bgAudioRef.current) {\n      bgAudioRef.current.volume = 0.3;\n      bgAudioRef.current.loop = true;\n    }\n    if (rollAudioRef.current) {\n      rollAudioRef.current.volume = 0.7;\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.volume = 0.8;\n    }\n    return () => {\n      if (bgAudioRef.current) bgAudioRef.current.pause();\n      if (rollAudioRef.current) rollAudioRef.current.pause();\n      if (winAudioRef.current) winAudioRef.current.pause();\n    };\n  }, [bgMusic, rollMusic, winMusic]);\n  const togglePlayPause = () => {\n    try {\n      if (isPlaying) {\n        var _bgAudioRef$current;\n        (_bgAudioRef$current = bgAudioRef.current) === null || _bgAudioRef$current === void 0 ? void 0 : _bgAudioRef$current.pause();\n        setIsPlaying(false);\n      } else {\n        var _bgAudioRef$current2;\n        const playPromise = (_bgAudioRef$current2 = bgAudioRef.current) === null || _bgAudioRef$current2 === void 0 ? void 0 : _bgAudioRef$current2.play();\n        if (playPromise) {\n          playPromise.then(() => {\n            setIsPlaying(true);\n          }).catch(error => {\n            console.error('播放失败:', error);\n            setIsPlaying(false);\n          });\n        }\n      }\n    } catch (error) {\n      console.error('音频控制错误:', error);\n      setIsPlaying(false);\n    }\n  };\n  const playRollMusic = () => {\n    try {\n      if (!isPlaying || !rollAudioRef.current) return;\n      rollAudioRef.current.currentTime = 0;\n      const playPromise = rollAudioRef.current.play();\n      if (playPromise) {\n        playPromise.catch(error => {\n          console.error('播放滚动音效失败:', error);\n        });\n      }\n    } catch (error) {\n      console.error('播放滚动音效错误:', error);\n    }\n  };\n  const playWinMusic = () => {\n    try {\n      if (!isPlaying || !winAudioRef.current) return;\n      winAudioRef.current.currentTime = 0;\n      const playPromise = winAudioRef.current.play();\n      if (playPromise) {\n        playPromise.catch(error => {\n          console.error('播放中奖音效失败:', error);\n        });\n      }\n    } catch (error) {\n      console.error('播放中奖音效错误:', error);\n    }\n  };\n  return {\n    isPlaying,\n    togglePlayPause,\n    playRollMusic,\n    playWinMusic\n  };\n};\n_s(useAudioControl, \"8bqr/qS61vhE9nT7ARHGCjhmnhk=\");","map":{"version":3,"names":["useState","useEffect","useRef","useAudioControl","bgMusic","rollMusic","winMusic","_s","isPlaying","setIsPlaying","bgAudioRef","rollAudioRef","winAudioRef","current","Audio","volume","loop","pause","togglePlayPause","_bgAudioRef$current","_bgAudioRef$current2","playPromise","play","then","catch","error","console","playRollMusic","currentTime","playWinMusic"],"sources":["/Users/lingxin/myapp/draw/src/hooks/useAudioControl.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n\n  // 初始化音频\n  useEffect(() => {\n    bgAudioRef.current = new Audio(bgMusic);\n    rollAudioRef.current = new Audio(rollMusic);\n    winAudioRef.current = new Audio(winMusic);\n\n    // 设置音量和循环\n    if (bgAudioRef.current) {\n      bgAudioRef.current.volume = 0.3;\n      bgAudioRef.current.loop = true;\n    }\n    if (rollAudioRef.current) {\n      rollAudioRef.current.volume = 0.7;\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.volume = 0.8;\n    }\n\n    return () => {\n      if (bgAudioRef.current) bgAudioRef.current.pause();\n      if (rollAudioRef.current) rollAudioRef.current.pause();\n      if (winAudioRef.current) winAudioRef.current.pause();\n    };\n  }, [bgMusic, rollMusic, winMusic]);\n\n  const togglePlayPause = () => {\n    try {\n      if (isPlaying) {\n        bgAudioRef.current?.pause();\n        setIsPlaying(false);\n      } else {\n        const playPromise = bgAudioRef.current?.play();\n        if (playPromise) {\n          playPromise\n            .then(() => {\n              setIsPlaying(true);\n            })\n            .catch((error) => {\n              console.error('播放失败:', error);\n              setIsPlaying(false);\n            });\n        }\n      }\n    } catch (error) {\n      console.error('音频控制错误:', error);\n      setIsPlaying(false);\n    }\n  };\n\n  const playRollMusic = () => {\n    try {\n      if (!isPlaying || !rollAudioRef.current) return;\n      \n      rollAudioRef.current.currentTime = 0;\n      const playPromise = rollAudioRef.current.play();\n      \n      if (playPromise) {\n        playPromise.catch((error) => {\n          console.error('播放滚动音效失败:', error);\n        });\n      }\n    } catch (error) {\n      console.error('播放滚动音效错误:', error);\n    }\n  };\n\n  const playWinMusic = () => {\n    try {\n      if (!isPlaying || !winAudioRef.current) return;\n      \n      winAudioRef.current.currentTime = 0;\n      const playPromise = winAudioRef.current.play();\n      \n      if (playPromise) {\n        playPromise.catch((error) => {\n          console.error('播放中奖音效失败:', error);\n        });\n      }\n    } catch (error) {\n      console.error('播放中奖音效错误:', error);\n    }\n  };\n\n  return {\n    isPlaying,\n    togglePlayPause,\n    playRollMusic,\n    playWinMusic\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}