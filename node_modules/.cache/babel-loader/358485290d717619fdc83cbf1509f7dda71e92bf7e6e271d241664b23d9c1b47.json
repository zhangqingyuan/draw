{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  _s();\n  const [isMuted, setIsMuted] = useState(false);\n  const [volume, setVolume] = useState(0.3); // 存储原始音量\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n  useEffect(() => {\n    // 初始化音频\n    bgAudioRef.current = new Audio(bgMusic);\n    rollAudioRef.current = new Audio(rollMusic);\n    winAudioRef.current = new Audio(winMusic);\n\n    // 设置音频属性\n    if (bgAudioRef.current) {\n      bgAudioRef.current.volume = volume;\n      bgAudioRef.current.loop = true;\n      // 自动开始播放背景音乐\n      bgAudioRef.current.play().catch(console.error);\n    }\n    if (rollAudioRef.current) {\n      rollAudioRef.current.volume = 0.7;\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.volume = 0.8;\n    }\n    return () => {\n      var _bgAudioRef$current, _rollAudioRef$current, _winAudioRef$current;\n      (_bgAudioRef$current = bgAudioRef.current) === null || _bgAudioRef$current === void 0 ? void 0 : _bgAudioRef$current.pause();\n      (_rollAudioRef$current = rollAudioRef.current) === null || _rollAudioRef$current === void 0 ? void 0 : _rollAudioRef$current.pause();\n      (_winAudioRef$current = winAudioRef.current) === null || _winAudioRef$current === void 0 ? void 0 : _winAudioRef$current.pause();\n    };\n  }, [bgMusic, rollMusic, winMusic]);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    if (bgAudioRef.current) {\n      if (isMuted) {\n        // 取消静音，恢复原来的音量\n        bgAudioRef.current.volume = volume;\n      } else {\n        // 静音\n        bgAudioRef.current.volume = 0;\n      }\n    }\n  };\n  const playRollMusic = () => {\n    if (!rollAudioRef.current) return;\n    rollAudioRef.current.currentTime = 0;\n    if (!isMuted) {\n      rollAudioRef.current.play().catch(console.error);\n    }\n  };\n  const playWinMusic = () => {\n    if (!winAudioRef.current) return;\n    winAudioRef.current.currentTime = 0;\n    if (!isMuted) {\n      winAudioRef.current.play().catch(console.error);\n    }\n  };\n  return {\n    isMuted,\n    toggleMute,\n    playRollMusic,\n    playWinMusic\n  };\n};\n_s(useAudioControl, \"X/7/Qmra+K7IQjj04BWxkkzVJJY=\");","map":{"version":3,"names":["useState","useEffect","useRef","useAudioControl","bgMusic","rollMusic","winMusic","_s","isMuted","setIsMuted","volume","setVolume","bgAudioRef","rollAudioRef","winAudioRef","current","Audio","loop","play","catch","console","error","_bgAudioRef$current","_rollAudioRef$current","_winAudioRef$current","pause","toggleMute","playRollMusic","currentTime","playWinMusic"],"sources":["/Users/lingxin/myapp/draw/src/hooks/useAudioControl.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  const [isMuted, setIsMuted] = useState(false);\n  const [volume, setVolume] = useState(0.3); // 存储原始音量\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n\n  useEffect(() => {\n    // 初始化音频\n    bgAudioRef.current = new Audio(bgMusic);\n    rollAudioRef.current = new Audio(rollMusic);\n    winAudioRef.current = new Audio(winMusic);\n\n    // 设置音频属性\n    if (bgAudioRef.current) {\n      bgAudioRef.current.volume = volume;\n      bgAudioRef.current.loop = true;\n      // 自动开始播放背景音乐\n      bgAudioRef.current.play().catch(console.error);\n    }\n    if (rollAudioRef.current) {\n      rollAudioRef.current.volume = 0.7;\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.volume = 0.8;\n    }\n\n    return () => {\n      bgAudioRef.current?.pause();\n      rollAudioRef.current?.pause();\n      winAudioRef.current?.pause();\n    };\n  }, [bgMusic, rollMusic, winMusic]);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    if (bgAudioRef.current) {\n      if (isMuted) {\n        // 取消静音，恢复原来的音量\n        bgAudioRef.current.volume = volume;\n      } else {\n        // 静音\n        bgAudioRef.current.volume = 0;\n      }\n    }\n  };\n\n  const playRollMusic = () => {\n    if (!rollAudioRef.current) return;\n\n    rollAudioRef.current.currentTime = 0;\n    if (!isMuted) {\n      rollAudioRef.current.play().catch(console.error);\n    }\n  };\n\n  const playWinMusic = () => {\n    if (!winAudioRef.current) return;\n\n    winAudioRef.current.currentTime = 0;\n    if (!isMuted) {\n      winAudioRef.current.play().catch(console.error);\n    }\n  };\n\n  return {\n    isMuted,\n    toggleMute,\n    playRollMusic,\n    playWinMusic\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}