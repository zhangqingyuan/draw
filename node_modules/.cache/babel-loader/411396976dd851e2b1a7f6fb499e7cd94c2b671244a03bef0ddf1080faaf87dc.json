{"ast":null,"code":"var _jsxFileName = \"/Users/lingxin/myapp/draw/src/components/PrizeSettings.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Form, Input, InputNumber, Button, Space, Card } from 'antd';\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrizeSettings = ({\n  onSettingsChange\n}) => {\n  _s();\n  const [form] = Form.useForm();\n  const handleValuesChange = (_, allValues) => {\n    onSettingsChange(allValues);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Prize Categories\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      onValuesChange: handleValuesChange,\n      initialValues: {\n        prizes: [{\n          name: '',\n          count: 1\n        }]\n      },\n      children: /*#__PURE__*/_jsxDEV(Form.List, {\n        name: \"prizes\",\n        children: (fields, {\n          add,\n          remove\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [fields.map(({\n            key,\n            name,\n            ...restField\n          }) => /*#__PURE__*/_jsxDEV(Space, {\n            style: {\n              display: 'flex',\n              marginBottom: 8\n            },\n            align: \"baseline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              ...restField,\n              name: [name, 'name'],\n              rules: [{\n                required: true,\n                message: 'Prize name is required'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Prize Name\",\n                style: {\n                  width: 200\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              ...restField,\n              name: [name, 'count'],\n              rules: [{\n                required: true,\n                message: 'Winner count is required'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 1,\n                placeholder: \"Winners\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n              onClick: () => remove(name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"dashed\",\n              onClick: () => add(),\n              block: true,\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 73\n              }, this),\n              children: \"Add Prize Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(PrizeSettings, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n_c = PrizeSettings;\nexport default PrizeSettings;\nvar _c;\n$RefreshReg$(_c, \"PrizeSettings\");","map":{"version":3,"names":["React","Form","Input","InputNumber","Button","Space","Card","PlusOutlined","MinusCircleOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","PrizeSettings","onSettingsChange","_s","form","useForm","handleValuesChange","_","allValues","title","children","onValuesChange","initialValues","prizes","name","count","List","fields","add","remove","map","key","restField","style","display","marginBottom","align","Item","rules","required","message","placeholder","width","fileName","_jsxFileName","lineNumber","columnNumber","min","onClick","type","block","icon","_c","$RefreshReg$"],"sources":["/Users/lingxin/myapp/draw/src/components/PrizeSettings.js"],"sourcesContent":["import React from 'react';\nimport { Form, Input, InputNumber, Button, Space, Card } from 'antd';\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst PrizeSettings = ({ onSettingsChange }) => {\n  const [form] = Form.useForm();\n\n  const handleValuesChange = (_, allValues) => {\n    onSettingsChange(allValues);\n  };\n\n  return (\n    <Card title=\"Prize Categories\">\n      <Form\n        form={form}\n        onValuesChange={handleValuesChange}\n        initialValues={{ prizes: [{ name: '', count: 1 }] }}\n      >\n        <Form.List name=\"prizes\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(({ key, name, ...restField }) => (\n                <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...restField}\n                    name={[name, 'name']}\n                    rules={[{ required: true, message: 'Prize name is required' }]}\n                  >\n                    <Input placeholder=\"Prize Name\" style={{ width: 200 }} />\n                  </Form.Item>\n                  <Form.Item\n                    {...restField}\n                    name={[name, 'count']}\n                    rules={[{ required: true, message: 'Winner count is required' }]}\n                  >\n                    <InputNumber min={1} placeholder=\"Winners\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add Prize Category\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n      </Form>\n    </Card>\n  );\n};\n\nexport default PrizeSettings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}