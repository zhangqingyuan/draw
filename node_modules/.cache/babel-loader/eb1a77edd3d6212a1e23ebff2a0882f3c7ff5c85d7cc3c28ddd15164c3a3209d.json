{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n  useEffect(() => {\n    const initAudio = () => {\n      if (!bgAudioRef.current) {\n        bgAudioRef.current = new Audio(bgMusic);\n        bgAudioRef.current.volume = 0.3;\n        bgAudioRef.current.loop = true;\n      }\n      if (!rollAudioRef.current) {\n        rollAudioRef.current = new Audio(rollMusic);\n        rollAudioRef.current.volume = 0.7;\n      }\n      if (!winAudioRef.current) {\n        winAudioRef.current = new Audio(winMusic);\n        winAudioRef.current.volume = 0.8;\n      }\n    };\n    initAudio();\n\n    // 监听滚动音效结束事件\n    const handleRollMusicEnd = () => {\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play().catch(console.error);\n      }\n    };\n\n    // 监听中奖音效结束事件\n    const handleWinMusicEnd = () => {\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play().catch(console.error);\n      }\n    };\n    if (rollAudioRef.current) {\n      rollAudioRef.current.addEventListener('ended', handleRollMusicEnd);\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.addEventListener('ended', handleWinMusicEnd);\n    }\n\n    // 清理函数\n    return () => {\n      if (bgAudioRef.current) {\n        bgAudioRef.current.pause();\n        bgAudioRef.current = null;\n      }\n      if (rollAudioRef.current) {\n        rollAudioRef.current.pause();\n        rollAudioRef.current.removeEventListener('ended', handleRollMusicEnd);\n        rollAudioRef.current = null;\n      }\n      if (winAudioRef.current) {\n        winAudioRef.current.pause();\n        winAudioRef.current.removeEventListener('ended', handleWinMusicEnd);\n        winAudioRef.current = null;\n      }\n    };\n  }, [bgMusic, rollMusic, winMusic, isPlaying]);\n  const togglePlayPause = async () => {\n    try {\n      // 确保音频对象已初始化\n      if (!bgAudioRef.current) {\n        bgAudioRef.current = new Audio(bgMusic);\n        bgAudioRef.current.volume = 0.3;\n        bgAudioRef.current.loop = true;\n      }\n      if (isPlaying) {\n        var _rollAudioRef$current, _winAudioRef$current;\n        // 暂停所有音频\n        bgAudioRef.current.pause();\n        (_rollAudioRef$current = rollAudioRef.current) === null || _rollAudioRef$current === void 0 ? void 0 : _rollAudioRef$current.pause();\n        (_winAudioRef$current = winAudioRef.current) === null || _winAudioRef$current === void 0 ? void 0 : _winAudioRef$current.pause();\n        setIsPlaying(false);\n      } else {\n        try {\n          // 尝试播放背景音乐\n          await bgAudioRef.current.play();\n          setIsPlaying(true);\n        } catch (error) {\n          console.error('播放失败:', error);\n          setIsPlaying(false);\n          // 重新初始化音频对象\n          bgAudioRef.current = new Audio(bgMusic);\n          bgAudioRef.current.volume = 0.3;\n          bgAudioRef.current.loop = true;\n        }\n      }\n    } catch (error) {\n      console.error('音频控制错误:', error);\n      setIsPlaying(false);\n    }\n  };\n  const playRollMusic = async () => {\n    if (!isPlaying) return;\n    try {\n      var _bgAudioRef$current, _winAudioRef$current2;\n      // 暂停背景音乐和其他音效\n      (_bgAudioRef$current = bgAudioRef.current) === null || _bgAudioRef$current === void 0 ? void 0 : _bgAudioRef$current.pause();\n      (_winAudioRef$current2 = winAudioRef.current) === null || _winAudioRef$current2 === void 0 ? void 0 : _winAudioRef$current2.pause();\n      if (!rollAudioRef.current) {\n        rollAudioRef.current = new Audio(rollMusic);\n        rollAudioRef.current.volume = 0.7;\n      }\n      rollAudioRef.current.currentTime = 0;\n      await rollAudioRef.current.play();\n    } catch (error) {\n      console.error('播放滚动音效失败:', error);\n      // 如果播放失败，尝试恢复背景音乐\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play().catch(console.error);\n      }\n    }\n  };\n  const playWinMusic = async () => {\n    if (!isPlaying) return;\n    try {\n      var _bgAudioRef$current2, _rollAudioRef$current2;\n      // 暂停背景音乐和其他音效\n      (_bgAudioRef$current2 = bgAudioRef.current) === null || _bgAudioRef$current2 === void 0 ? void 0 : _bgAudioRef$current2.pause();\n      (_rollAudioRef$current2 = rollAudioRef.current) === null || _rollAudioRef$current2 === void 0 ? void 0 : _rollAudioRef$current2.pause();\n      if (!winAudioRef.current) {\n        winAudioRef.current = new Audio(winMusic);\n        winAudioRef.current.volume = 0.8;\n      }\n      winAudioRef.current.currentTime = 0;\n      await winAudioRef.current.play();\n    } catch (error) {\n      console.error('播放中奖音效失败:', error);\n      // 如果播放失败，尝试恢复背景音乐\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play().catch(console.error);\n      }\n    }\n  };\n  return {\n    isPlaying,\n    togglePlayPause,\n    playRollMusic,\n    playWinMusic\n  };\n};\n_s(useAudioControl, \"8bqr/qS61vhE9nT7ARHGCjhmnhk=\");","map":{"version":3,"names":["useState","useEffect","useRef","useAudioControl","bgMusic","rollMusic","winMusic","_s","isPlaying","setIsPlaying","bgAudioRef","rollAudioRef","winAudioRef","initAudio","current","Audio","volume","loop","handleRollMusicEnd","play","catch","console","error","handleWinMusicEnd","addEventListener","pause","removeEventListener","togglePlayPause","_rollAudioRef$current","_winAudioRef$current","playRollMusic","_bgAudioRef$current","_winAudioRef$current2","currentTime","playWinMusic","_bgAudioRef$current2","_rollAudioRef$current2"],"sources":["/Users/lingxin/myapp/draw/src/hooks/useAudioControl.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n\n  useEffect(() => {\n    const initAudio = () => {\n      if (!bgAudioRef.current) {\n        bgAudioRef.current = new Audio(bgMusic);\n        bgAudioRef.current.volume = 0.3;\n        bgAudioRef.current.loop = true;\n      }\n      if (!rollAudioRef.current) {\n        rollAudioRef.current = new Audio(rollMusic);\n        rollAudioRef.current.volume = 0.7;\n      }\n      if (!winAudioRef.current) {\n        winAudioRef.current = new Audio(winMusic);\n        winAudioRef.current.volume = 0.8;\n      }\n    };\n\n    initAudio();\n\n    // 监听滚动音效结束事件\n    const handleRollMusicEnd = () => {\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play().catch(console.error);\n      }\n    };\n\n    // 监听中奖音效结束事件\n    const handleWinMusicEnd = () => {\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play().catch(console.error);\n      }\n    };\n\n    if (rollAudioRef.current) {\n      rollAudioRef.current.addEventListener('ended', handleRollMusicEnd);\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.addEventListener('ended', handleWinMusicEnd);\n    }\n\n    // 清理函数\n    return () => {\n      if (bgAudioRef.current) {\n        bgAudioRef.current.pause();\n        bgAudioRef.current = null;\n      }\n      if (rollAudioRef.current) {\n        rollAudioRef.current.pause();\n        rollAudioRef.current.removeEventListener('ended', handleRollMusicEnd);\n        rollAudioRef.current = null;\n      }\n      if (winAudioRef.current) {\n        winAudioRef.current.pause();\n        winAudioRef.current.removeEventListener('ended', handleWinMusicEnd);\n        winAudioRef.current = null;\n      }\n    };\n  }, [bgMusic, rollMusic, winMusic, isPlaying]);\n\n  const togglePlayPause = async () => {\n    try {\n      // 确保音频对象已初始化\n      if (!bgAudioRef.current) {\n        bgAudioRef.current = new Audio(bgMusic);\n        bgAudioRef.current.volume = 0.3;\n        bgAudioRef.current.loop = true;\n      }\n\n      if (isPlaying) {\n        // 暂停所有音频\n        bgAudioRef.current.pause();\n        rollAudioRef.current?.pause();\n        winAudioRef.current?.pause();\n        setIsPlaying(false);\n      } else {\n        try {\n          // 尝试播放背景音乐\n          await bgAudioRef.current.play();\n          setIsPlaying(true);\n        } catch (error) {\n          console.error('播放失败:', error);\n          setIsPlaying(false);\n          // 重新初始化音频对象\n          bgAudioRef.current = new Audio(bgMusic);\n          bgAudioRef.current.volume = 0.3;\n          bgAudioRef.current.loop = true;\n        }\n      }\n    } catch (error) {\n      console.error('音频控制错误:', error);\n      setIsPlaying(false);\n    }\n  };\n\n  const playRollMusic = async () => {\n    if (!isPlaying) return;\n\n    try {\n      // 暂停背景音乐和其他音效\n      bgAudioRef.current?.pause();\n      winAudioRef.current?.pause();\n\n      if (!rollAudioRef.current) {\n        rollAudioRef.current = new Audio(rollMusic);\n        rollAudioRef.current.volume = 0.7;\n      }\n\n      rollAudioRef.current.currentTime = 0;\n      await rollAudioRef.current.play();\n    } catch (error) {\n      console.error('播放滚动音效失败:', error);\n      // 如果播放失败，尝试恢复背景音乐\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play().catch(console.error);\n      }\n    }\n  };\n\n  const playWinMusic = async () => {\n    if (!isPlaying) return;\n\n    try {\n      // 暂停背景音乐和其他音效\n      bgAudioRef.current?.pause();\n      rollAudioRef.current?.pause();\n\n      if (!winAudioRef.current) {\n        winAudioRef.current = new Audio(winMusic);\n        winAudioRef.current.volume = 0.8;\n      }\n\n      winAudioRef.current.currentTime = 0;\n      await winAudioRef.current.play();\n    } catch (error) {\n      console.error('播放中奖音效失败:', error);\n      // 如果播放失败，尝试恢复背景音乐\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play().catch(console.error);\n      }\n    }\n  };\n\n  return {\n    isPlaying,\n    togglePlayPause,\n    playRollMusic,\n    playWinMusic\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}