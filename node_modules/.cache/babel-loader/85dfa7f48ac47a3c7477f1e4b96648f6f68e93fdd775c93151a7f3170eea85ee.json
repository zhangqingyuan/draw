{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n  useEffect(() => {\n    // 初始化音频\n    bgAudioRef.current = new Audio(bgMusic);\n    rollAudioRef.current = new Audio(rollMusic);\n    winAudioRef.current = new Audio(winMusic);\n\n    // 设置音频属性\n    if (bgAudioRef.current) {\n      bgAudioRef.current.volume = 0.3;\n      bgAudioRef.current.loop = true;\n    }\n    if (rollAudioRef.current) {\n      rollAudioRef.current.volume = 0.7;\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.volume = 0.8;\n    }\n\n    // 监听滚动音效结束事件\n    const handleRollMusicEnd = () => {\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play();\n      }\n    };\n\n    // 监听中奖音效结束事件\n    const handleWinMusicEnd = () => {\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play();\n      }\n    };\n    rollAudioRef.current.addEventListener('ended', handleRollMusicEnd);\n    winAudioRef.current.addEventListener('ended', handleWinMusicEnd);\n\n    // 清理函数\n    return () => {\n      var _bgAudioRef$current, _rollAudioRef$current, _winAudioRef$current, _rollAudioRef$current2, _winAudioRef$current2;\n      (_bgAudioRef$current = bgAudioRef.current) === null || _bgAudioRef$current === void 0 ? void 0 : _bgAudioRef$current.pause();\n      (_rollAudioRef$current = rollAudioRef.current) === null || _rollAudioRef$current === void 0 ? void 0 : _rollAudioRef$current.pause();\n      (_winAudioRef$current = winAudioRef.current) === null || _winAudioRef$current === void 0 ? void 0 : _winAudioRef$current.pause();\n      (_rollAudioRef$current2 = rollAudioRef.current) === null || _rollAudioRef$current2 === void 0 ? void 0 : _rollAudioRef$current2.removeEventListener('ended', handleRollMusicEnd);\n      (_winAudioRef$current2 = winAudioRef.current) === null || _winAudioRef$current2 === void 0 ? void 0 : _winAudioRef$current2.removeEventListener('ended', handleWinMusicEnd);\n    };\n  }, [bgMusic, rollMusic, winMusic, isPlaying]);\n  const togglePlayPause = () => {\n    if (!bgAudioRef.current) return;\n    if (isPlaying) {\n      var _rollAudioRef$current3, _winAudioRef$current3;\n      bgAudioRef.current.pause();\n      (_rollAudioRef$current3 = rollAudioRef.current) === null || _rollAudioRef$current3 === void 0 ? void 0 : _rollAudioRef$current3.pause();\n      (_winAudioRef$current3 = winAudioRef.current) === null || _winAudioRef$current3 === void 0 ? void 0 : _winAudioRef$current3.pause();\n      setIsPlaying(false);\n    } else {\n      // 尝试播放\n      const playPromise = bgAudioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          setIsPlaying(true);\n        }).catch(error => {\n          console.error('播放失败:', error);\n          setIsPlaying(false);\n        });\n      }\n    }\n  };\n  const playRollMusic = () => {\n    var _bgAudioRef$current2, _winAudioRef$current4;\n    if (!rollAudioRef.current || !isPlaying) return;\n\n    // 暂停背景音乐和其他音效\n    (_bgAudioRef$current2 = bgAudioRef.current) === null || _bgAudioRef$current2 === void 0 ? void 0 : _bgAudioRef$current2.pause();\n    (_winAudioRef$current4 = winAudioRef.current) === null || _winAudioRef$current4 === void 0 ? void 0 : _winAudioRef$current4.pause();\n    rollAudioRef.current.currentTime = 0;\n    const playPromise = rollAudioRef.current.play();\n    if (playPromise !== undefined) {\n      playPromise.catch(error => {\n        console.error('播放滚动音效失败:', error);\n        // 如果播放失败，尝试恢复背景音乐\n        if (isPlaying && bgAudioRef.current) {\n          bgAudioRef.current.play();\n        }\n      });\n    }\n  };\n  const playWinMusic = () => {\n    var _bgAudioRef$current3, _rollAudioRef$current4;\n    if (!winAudioRef.current || !isPlaying) return;\n\n    // 暂停背景音乐和其他音效\n    (_bgAudioRef$current3 = bgAudioRef.current) === null || _bgAudioRef$current3 === void 0 ? void 0 : _bgAudioRef$current3.pause();\n    (_rollAudioRef$current4 = rollAudioRef.current) === null || _rollAudioRef$current4 === void 0 ? void 0 : _rollAudioRef$current4.pause();\n    winAudioRef.current.currentTime = 0;\n    const playPromise = winAudioRef.current.play();\n    if (playPromise !== undefined) {\n      playPromise.catch(error => {\n        console.error('播放中奖音效失败:', error);\n        // 如果播放失败，尝试恢复背景音乐\n        if (isPlaying && bgAudioRef.current) {\n          bgAudioRef.current.play();\n        }\n      });\n    }\n  };\n  return {\n    isPlaying,\n    togglePlayPause,\n    playRollMusic,\n    playWinMusic\n  };\n};\n_s(useAudioControl, \"8bqr/qS61vhE9nT7ARHGCjhmnhk=\");","map":{"version":3,"names":["useState","useEffect","useRef","useAudioControl","bgMusic","rollMusic","winMusic","_s","isPlaying","setIsPlaying","bgAudioRef","rollAudioRef","winAudioRef","current","Audio","volume","loop","handleRollMusicEnd","play","handleWinMusicEnd","addEventListener","_bgAudioRef$current","_rollAudioRef$current","_winAudioRef$current","_rollAudioRef$current2","_winAudioRef$current2","pause","removeEventListener","togglePlayPause","_rollAudioRef$current3","_winAudioRef$current3","playPromise","undefined","then","catch","error","console","playRollMusic","_bgAudioRef$current2","_winAudioRef$current4","currentTime","playWinMusic","_bgAudioRef$current3","_rollAudioRef$current4"],"sources":["/Users/lingxin/myapp/draw/src/hooks/useAudioControl.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n\n  useEffect(() => {\n    // 初始化音频\n    bgAudioRef.current = new Audio(bgMusic);\n    rollAudioRef.current = new Audio(rollMusic);\n    winAudioRef.current = new Audio(winMusic);\n\n    // 设置音频属性\n    if (bgAudioRef.current) {\n      bgAudioRef.current.volume = 0.3;\n      bgAudioRef.current.loop = true;\n    }\n    if (rollAudioRef.current) {\n      rollAudioRef.current.volume = 0.7;\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.volume = 0.8;\n    }\n\n    // 监听滚动音效结束事件\n    const handleRollMusicEnd = () => {\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play();\n      }\n    };\n\n    // 监听中奖音效结束事件\n    const handleWinMusicEnd = () => {\n      if (isPlaying && bgAudioRef.current) {\n        bgAudioRef.current.play();\n      }\n    };\n\n    rollAudioRef.current.addEventListener('ended', handleRollMusicEnd);\n    winAudioRef.current.addEventListener('ended', handleWinMusicEnd);\n\n    // 清理函数\n    return () => {\n      bgAudioRef.current?.pause();\n      rollAudioRef.current?.pause();\n      winAudioRef.current?.pause();\n      rollAudioRef.current?.removeEventListener('ended', handleRollMusicEnd);\n      winAudioRef.current?.removeEventListener('ended', handleWinMusicEnd);\n    };\n  }, [bgMusic, rollMusic, winMusic, isPlaying]);\n\n  const togglePlayPause = () => {\n    if (!bgAudioRef.current) return;\n\n    if (isPlaying) {\n      bgAudioRef.current.pause();\n      rollAudioRef.current?.pause();\n      winAudioRef.current?.pause();\n      setIsPlaying(false);\n    } else {\n      // 尝试播放\n      const playPromise = bgAudioRef.current.play();\n      \n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {\n            setIsPlaying(true);\n          })\n          .catch(error => {\n            console.error('播放失败:', error);\n            setIsPlaying(false);\n          });\n      }\n    }\n  };\n\n  const playRollMusic = () => {\n    if (!rollAudioRef.current || !isPlaying) return;\n\n    // 暂停背景音乐和其他音效\n    bgAudioRef.current?.pause();\n    winAudioRef.current?.pause();\n\n    rollAudioRef.current.currentTime = 0;\n    const playPromise = rollAudioRef.current.play();\n    \n    if (playPromise !== undefined) {\n      playPromise.catch(error => {\n        console.error('播放滚动音效失败:', error);\n        // 如果播放失败，尝试恢复背景音乐\n        if (isPlaying && bgAudioRef.current) {\n          bgAudioRef.current.play();\n        }\n      });\n    }\n  };\n\n  const playWinMusic = () => {\n    if (!winAudioRef.current || !isPlaying) return;\n\n    // 暂停背景音乐和其他音效\n    bgAudioRef.current?.pause();\n    rollAudioRef.current?.pause();\n\n    winAudioRef.current.currentTime = 0;\n    const playPromise = winAudioRef.current.play();\n    \n    if (playPromise !== undefined) {\n      playPromise.catch(error => {\n        console.error('播放中奖音效失败:', error);\n        // 如果播放失败，尝试恢复背景音乐\n        if (isPlaying && bgAudioRef.current) {\n          bgAudioRef.current.play();\n        }\n      });\n    }\n  };\n\n  return {\n    isPlaying,\n    togglePlayPause,\n    playRollMusic,\n    playWinMusic\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}