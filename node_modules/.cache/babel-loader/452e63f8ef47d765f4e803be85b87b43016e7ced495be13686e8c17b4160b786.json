{"ast":null,"code":"import{useState,useEffect,useRef}from'react';export const useAudioControl=(bgMusic,rollMusic,winMusic)=>{const[isMuted,setIsMuted]=useState(false);const[volume,setVolume]=useState(0.3);const bgAudioRef=useRef(null);const rollAudioRef=useRef(null);const winAudioRef=useRef(null);const currentPlayingRef=useRef(null);// 初始化音频\nuseEffect(()=>{const initAudio=()=>{bgAudioRef.current=new Audio(bgMusic);rollAudioRef.current=new Audio(rollMusic);winAudioRef.current=new Audio(winMusic);// 设置基本属性\nbgAudioRef.current.loop=true;rollAudioRef.current.loop=true;// 设置音量\nbgAudioRef.current.volume=isMuted?0:volume;rollAudioRef.current.volume=isMuted?0:0.7;winAudioRef.current.volume=isMuted?0:0.8;// 开始播放背景音乐\nbgAudioRef.current.play().catch(console.error);currentPlayingRef.current=bgAudioRef.current;};initAudio();// 监听中奖音效结束事件\nconst handleWinMusicEnd=()=>{if(bgAudioRef.current&&!isMuted){bgAudioRef.current.play().catch(console.error);currentPlayingRef.current=bgAudioRef.current;}};if(winAudioRef.current){winAudioRef.current.addEventListener('ended',handleWinMusicEnd);}// 清理函数\nreturn()=>{if(bgAudioRef.current){bgAudioRef.current.pause();}if(rollAudioRef.current){rollAudioRef.current.pause();}if(winAudioRef.current){winAudioRef.current.removeEventListener('ended',handleWinMusicEnd);winAudioRef.current.pause();}};},[bgMusic,rollMusic,winMusic]);// 更新音量\nuseEffect(()=>{if(bgAudioRef.current){bgAudioRef.current.volume=isMuted?0:volume;}if(rollAudioRef.current){rollAudioRef.current.volume=isMuted?0:0.7;}if(winAudioRef.current){winAudioRef.current.volume=isMuted?0:0.8;}},[isMuted,volume]);const toggleMute=()=>{setIsMuted(prev=>!prev);};const playRollMusic=()=>{var _currentPlayingRef$cu;if(!rollAudioRef.current)return;// 暂停当前播放的音频\n(_currentPlayingRef$cu=currentPlayingRef.current)===null||_currentPlayingRef$cu===void 0?void 0:_currentPlayingRef$cu.pause();// 重置并播放滚动音效\nrollAudioRef.current.currentTime=0;const playPromise=rollAudioRef.current.play();if(playPromise){playPromise.catch(error=>{console.error('播放滚动音效失败:',error);// 如果播放失败，尝试恢复背景音乐\nif(bgAudioRef.current&&!isMuted){bgAudioRef.current.play().catch(console.error);currentPlayingRef.current=bgAudioRef.current;}});}currentPlayingRef.current=rollAudioRef.current;};const playWinMusic=()=>{var _currentPlayingRef$cu2;if(!winAudioRef.current)return;// 暂停当前播放的音频\n(_currentPlayingRef$cu2=currentPlayingRef.current)===null||_currentPlayingRef$cu2===void 0?void 0:_currentPlayingRef$cu2.pause();// 重置并播放中奖音效\nwinAudioRef.current.currentTime=0;const playPromise=winAudioRef.current.play();if(playPromise){playPromise.catch(error=>{console.error('播放中奖音效失败:',error);// 如果播放失败，尝试恢复背景音乐\nif(bgAudioRef.current&&!isMuted){bgAudioRef.current.play().catch(console.error);currentPlayingRef.current=bgAudioRef.current;}});}currentPlayingRef.current=winAudioRef.current;};return{isMuted,toggleMute,playRollMusic,playWinMusic};};","map":{"version":3,"names":["useState","useEffect","useRef","useAudioControl","bgMusic","rollMusic","winMusic","isMuted","setIsMuted","volume","setVolume","bgAudioRef","rollAudioRef","winAudioRef","currentPlayingRef","initAudio","current","Audio","loop","play","catch","console","error","handleWinMusicEnd","addEventListener","pause","removeEventListener","toggleMute","prev","playRollMusic","_currentPlayingRef$cu","currentTime","playPromise","playWinMusic","_currentPlayingRef$cu2"],"sources":["/Users/lingxin/myapp/draw/src/hooks/useAudioControl.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nexport const useAudioControl = (bgMusic, rollMusic, winMusic) => {\n  const [isMuted, setIsMuted] = useState(false);\n  const [volume, setVolume] = useState(0.3);\n  const bgAudioRef = useRef(null);\n  const rollAudioRef = useRef(null);\n  const winAudioRef = useRef(null);\n  const currentPlayingRef = useRef(null);\n\n  // 初始化音频\n  useEffect(() => {\n    const initAudio = () => {\n      bgAudioRef.current = new Audio(bgMusic);\n      rollAudioRef.current = new Audio(rollMusic);\n      winAudioRef.current = new Audio(winMusic);\n\n      // 设置基本属性\n      bgAudioRef.current.loop = true;\n      rollAudioRef.current.loop = true;\n      \n      // 设置音量\n      bgAudioRef.current.volume = isMuted ? 0 : volume;\n      rollAudioRef.current.volume = isMuted ? 0 : 0.7;\n      winAudioRef.current.volume = isMuted ? 0 : 0.8;\n\n      // 开始播放背景音乐\n      bgAudioRef.current.play().catch(console.error);\n      currentPlayingRef.current = bgAudioRef.current;\n    };\n\n    initAudio();\n\n    // 监听中奖音效结束事件\n    const handleWinMusicEnd = () => {\n      if (bgAudioRef.current && !isMuted) {\n        bgAudioRef.current.play().catch(console.error);\n        currentPlayingRef.current = bgAudioRef.current;\n      }\n    };\n\n    if (winAudioRef.current) {\n      winAudioRef.current.addEventListener('ended', handleWinMusicEnd);\n    }\n\n    // 清理函数\n    return () => {\n      if (bgAudioRef.current) {\n        bgAudioRef.current.pause();\n      }\n      if (rollAudioRef.current) {\n        rollAudioRef.current.pause();\n      }\n      if (winAudioRef.current) {\n        winAudioRef.current.removeEventListener('ended', handleWinMusicEnd);\n        winAudioRef.current.pause();\n      }\n    };\n  }, [bgMusic, rollMusic, winMusic]);\n\n  // 更新音量\n  useEffect(() => {\n    if (bgAudioRef.current) {\n      bgAudioRef.current.volume = isMuted ? 0 : volume;\n    }\n    if (rollAudioRef.current) {\n      rollAudioRef.current.volume = isMuted ? 0 : 0.7;\n    }\n    if (winAudioRef.current) {\n      winAudioRef.current.volume = isMuted ? 0 : 0.8;\n    }\n  }, [isMuted, volume]);\n\n  const toggleMute = () => {\n    setIsMuted(prev => !prev);\n  };\n\n  const playRollMusic = () => {\n    if (!rollAudioRef.current) return;\n\n    // 暂停当前播放的音频\n    currentPlayingRef.current?.pause();\n\n    // 重置并播放滚动音效\n    rollAudioRef.current.currentTime = 0;\n    const playPromise = rollAudioRef.current.play();\n    \n    if (playPromise) {\n      playPromise.catch(error => {\n        console.error('播放滚动音效失败:', error);\n        // 如果播放失败，尝试恢复背景音乐\n        if (bgAudioRef.current && !isMuted) {\n          bgAudioRef.current.play().catch(console.error);\n          currentPlayingRef.current = bgAudioRef.current;\n        }\n      });\n    }\n    \n    currentPlayingRef.current = rollAudioRef.current;\n  };\n\n  const playWinMusic = () => {\n    if (!winAudioRef.current) return;\n\n    // 暂停当前播放的音频\n    currentPlayingRef.current?.pause();\n\n    // 重置并播放中奖音效\n    winAudioRef.current.currentTime = 0;\n    const playPromise = winAudioRef.current.play();\n    \n    if (playPromise) {\n      playPromise.catch(error => {\n        console.error('播放中奖音效失败:', error);\n        // 如果播放失败，尝试恢复背景音乐\n        if (bgAudioRef.current && !isMuted) {\n          bgAudioRef.current.play().catch(console.error);\n          currentPlayingRef.current = bgAudioRef.current;\n        }\n      });\n    }\n    \n    currentPlayingRef.current = winAudioRef.current;\n  };\n\n  return {\n    isMuted,\n    toggleMute,\n    playRollMusic,\n    playWinMusic\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}